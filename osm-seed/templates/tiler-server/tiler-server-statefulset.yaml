{{- if .Values.tilerServer.enabled -}}
{{ if eq .Values.tilerServer.env.TILER_CACHE_TYPE "file" }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-tiler-server
  labels:
    app: {{ template "osm-seed.name" . }}
    component: tiler-server-statefulset
    environment: {{ .Values.environment }}
    release: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "osm-seed.name" . }}
      release: {{ .Release.Name }}
      run: {{ .Release.Name }}-tiler-server
  serviceName: {{ .Release.Name }}-tiler-server
  template:
    metadata:
      labels:
        app: {{ template "osm-seed.name" . }}
        release: {{ .Release.Name }}
        run: {{ .Release.Name }}-tiler-server
    spec:
      containers:
        - name: {{ .Chart.Name }}-tiler-server
          image: "{{ .Values.tilerServer.image.name }}:{{ .Values.tilerServer.image.tag }}"
          command: [ {{ .Values.tilerServer.command }} ]
          ports:
            - name: http
              containerPort: {{ .Values.tilerServer.env.TILER_SERVER_PORT }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.tilerServer.env.TILER_SERVER_PORT }}
            initialDelaySeconds: 600 # 10 min, because the compile process takes time.
            timeoutSeconds: 30
          {{- if .Values.tilerServer.resources.enabled }}
          resources:
            requests:
              memory: {{ .Values.tilerServer.resources.requests.memory }}
              cpu: {{ .Values.tilerServer.resources.requests.cpu }}
            limits:
              memory: {{ .Values.tilerServer.resources.limits.memory }}
              cpu: {{ .Values.tilerServer.resources.limits.cpu }}
          {{- end }}
          envFrom:
          - configMapRef:
              name: {{ .Release.Name }}-tiler-server-cm
          - configMapRef:
              name: {{ .Release.Name }}-tiler-db-cm
          volumeMounts:
          - mountPath: /mnt/data
            name: tiler-server-storage
      restartPolicy: Always
      volumes:
        - name: tiler-server-storage
        {{- if .Values.tilerServer.persistenceDisk.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-tiler-server-pv-claim
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- if .Values.tilerServer.nodeSelector.enabled }}
      nodeSelector:
        {{ .Values.tilerServer.nodeSelector.label_key }} : {{ .Values.tilerServer.nodeSelector.label_value }}
      {{- end }}
{{- end }}
{{- end }}
